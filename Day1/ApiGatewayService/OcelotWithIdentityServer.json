{
  //"Routes": [
  //  {
  //    "DownstreamPathTemplate": "/connect/token",
  //    "DownstreamScheme": "http",
  //    "DownstreamHostAndPorts": [
  //      {
  //        "Host": "192.168.0.232",
  //        "Port": 5000
  //      }
  //    ],
  //    "UpstreamPathTemplate": "/connect/token",
  //    "UpstreamHttpMethod": [ "Get","Post" ],
  //    "Priority": 2
  //  },
  //  {
  //    "DownstreamPathTemplate": "/api/{path}",
  //    "DownstreamScheme": "http",
  //    "DownstreamHostAndPorts": [
  //      {
  //        "Host": "192.168.0.232",
  //        "Port": 5001
  //      }
  //    ],
  //    "UpstreamPathTemplate": "/ServiceA/{path}",
  //    "UpstreamHttpMethod": [ "Get", "Post" ],
  //    "Priority": 2,
  //    "AuthenticationOptions": {
  //      "AuthenticationProviderKey": "TestKey",
  //      "AllowedScopes": []
  //    }
  //  },
  //  {
  //    "DownstreamPathTemplate": "/api/{path}",
  //    "DownstreamScheme": "http",
  //    "DownstreamHostAndPorts": [
  //      {
  //        "Host": "192.168.0.232",
  //        "Port": 5002
  //      }
  //    ],
  //    "UpstreamPathTemplate": "/ServiceB/{path}",
  //    "UpstreamHttpMethod": [ "Get", "Post" ],
  //    "Priority": 2
  //  }
  //]
  // 使用服务发现
  "Routes": [
    {
      "DownstreamPathTemplate": "/connect/token",
      "DownstreamScheme": "http",
      "DownstreamHostAndPorts": [
        {
          "Host": "192.168.0.232",
          "Port": 5000
        }
      ],
      "UpstreamPathTemplate": "/connect/token",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "Priority": 2
    },
    {
      "UseServiceDiscovery": true, // 使用了服务发现，也必须指定转发规则。除非是动态路由才不需要指定转发规则
      "DownstreamPathTemplate": "/{path}",
      "DownstreamScheme": "http",
      "ServiceName": "ServiceA",
      "UpstreamPathTemplate": "/ServiceA/{path}",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "TestKey",// 一个Key对应一个授权认证方案，可以多个服务使用同一个Key
        "AllowedScopes": []
      }
    },
    {
      "UseServiceDiscovery": true, // 使用了服务发现，也必须指定转发规则。除非是动态路由才不需要指定转发规则
      "DownstreamPathTemplate": "/{path}",
      "DownstreamScheme": "http",
      "ServiceName": "ServiceB",
      "UpstreamPathTemplate": "/ServiceB/{path}",
      "UpstreamHttpMethod": [ "Get", "Post" ],
      "LoadBalancerOptions": {
        "Type": "RoundRobin"
      },
      "AuthenticationOptions": {
        "AuthenticationProviderKey": "TestKey", // 一个Key对应一个授权认证方案，可以多个服务使用同一个Key
        "AllowedScopes": []
      }
    }
  ],
  "GlobalConfiguration": {
    "RequestIdKey": null,
    "ServiceDiscoveryProvider": {
      "Host": "127.0.0.1", // Consul Service IP
      "Port": 8500, // Consul Service Port
      "Type": "Consul"
    },
    "RateLimitOptions": {
      "DisableRateLimitHeaders": false, // Http头  X-Rate-Limit 和 Retry-After 是否禁用
      "QuotaExceededMessage": "Too many requests, are you OK?", // 当请求过载被截断时返回的消息
      "HttpStatusCode": 999, // 当请求过载被截断时返回的http status
      "ClientIdHeader": "client_id" // 用来识别客户端的请求头，默认是 ClientId
    },
    "RateLimitRule": {
      "ClientWhitelist": [],
      "EnableRateLimiting": false,
      "Period": "5s",
      "PeriodTimespan": 5,
      "Limit": 5
    },
    "QoSOptions": {
      "ExceptionsAllowedBeforeBreaking": 2,
      "DurationOfBreak": 5000,
      "TimeoutValue": 2000
    },
    "BaseUrl": null,
    "LoadBalancerOptions": {
      "Type": "LeastConnection",
      "Key": null,
      "Expiry": 0
    },
    "DownstreamScheme": "http",
    "HttpHandlerOptions": {
      "AllowAutoRedirect": false,
      "UseCookieContainer": false,
      "UseTracing": false
    }
  }
}
